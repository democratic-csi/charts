# Default values for democratic-csi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

extraCaCerts:
#extraCaCerts: |-
#  -----BEGIN CERTIFICATE-----
#  ...
#  -----END CERTIFICATE-----
#  -----BEGIN CERTIFICATE-----
#  ...
#  -----END CERTIFICATE-----

driver:
  # see the driver-config-secret.yaml for syntax
  # NOTE: if setting an existing secret you must still set `driver.config.driver`
  # to the corresponding value that you place in the secret as the value is used
  # by the chart for other purposes beyond secret creation
  existingConfigSecret:
  config:
    {}
    #driver:
    # rest of per-driver config data/syntax
    # ...

# https://kubernetes-csi.github.io/docs/csi-driver-object.html
csiDriver:
  # should be globally unique for a given cluster
  name:
  version: 1.5.0
  # create the kubernetes CSIDriver
  enabled: true
  attachRequired: true
  podInfoOnMount: true
  # https://github.com/democratic-csi/democratic-csi/issues/274#issuecomment-1426922600
  # https://kubernetes-csi.github.io/docs/support-fsgroup.html
  # https://kubernetes-csi.github.io/docs/support-fsgroup.html#delegate-fsgroup-to-csi-driver
  #
  # if node service advertises VOLUME_MOUNT_GROUP capability then fsGroup is passed to driver
  #
  # k8s 1.19+ (ignored otherwise)
  # None|File|ReadWriteOnceWithFSType
  # fsGroupPolicy: ReadWriteOnceWithFSType

  # k8s 1.16+
  # volumeLifecycleModes: []

  # k8s 1.20+
  # tokenRequests: []

  # k8s 1.20+
  # requiresRepublish: false

  # k8s 1.19+
  # storageCapacity: false

controller:
  enabled: true
  rbac:
    enabled: true
    openshift:
      # set to true if running on openshift *and* you have need
      # ie: hostNetwork, hostIPC, etc are turned on
      privileged: false
  replicaCount: 1
  hostNetwork: false
  hostAliases: []
  hostIPC: false
  annotations: {}
  labels: {}
  podAnnotations: {}
  podLabels: {}
  priorityClassName: ""

  # deployment = deploy controller parts in a distinct deployment
  # node       = deploy controller as sidecars with node daemonset
  strategy: deployment

  # https://kubernetes-csi.github.io/docs/external-attacher.html
  externalAttacher:
    enabled: true
    image: registry.k8s.io/sig-storage/csi-attacher:v4.4.0
    args:
      - --v=5
      - --leader-election
      - --leader-election-namespace={{ .Release.Namespace }}
      - --timeout=90s
      - --worker-threads=10
      - --csi-address={{ .csiSocketAddress }}
    # if you do not want to completely override the defaults use this
    extraArgs: []
    resources:

  # https://kubernetes-csi.github.io/docs/external-provisioner.html
  externalProvisioner:
    enabled: true
    image: registry.k8s.io/sig-storage/csi-provisioner:v3.6.0
    args:
      - --v=5
      - --leader-election
      - --leader-election-namespace={{ .Release.Namespace }}
      - --timeout=90s
      - --worker-threads=10
      - --extra-create-metadata
      - --csi-address={{ .csiSocketAddress }}
    # if you do not want to completely override the defaults use this
    extraArgs: []
    resources:

  # https://kubernetes-csi.github.io/docs/external-resizer.html
  externalResizer:
    enabled: true
    image: registry.k8s.io/sig-storage/csi-resizer:v1.9.0
    args:
      - --v=5
      - --leader-election
      - --leader-election-namespace={{ .Release.Namespace }}
      - --timeout=90s
      - --workers=10
      - --csi-address={{ .csiSocketAddress }}
    # if you do not want to completely override the defaults use this
    extraArgs: []
    resources:

  # https://kubernetes-csi.github.io/docs/external-snapshotter.html
  externalSnapshotter:
    enabled: true
    # 1.20+ should use v4.0.0+
    # READ *before* updating from beta https://github.com/kubernetes-csi/external-snapshotter#usage
    image: registry.k8s.io/sig-storage/csi-snapshotter:v8.2.0
    args:
      - --v=5
      - --leader-election
      - --leader-election-namespace={{ .Release.Namespace }}
      - --timeout=90s
      - --worker-threads=10
      - --csi-address={{ .csiSocketAddress }}
    # if you do not want to completely override the defaults use this
    extraArgs: []
    resources:

  # https://github.com/kubernetes-csi/external-health-monitor
  externalHealthMonitorController:
    enabled: false
    image: registry.k8s.io/sig-storage/csi-external-health-monitor-controller:v0.11.0
    args:
      - --v=5
      - --leader-election
      - --leader-election-namespace={{ .Release.Namespace }}
      - --timeout=90s
      - --worker-threads=10
      - --csi-address={{ .csiSocketAddress }}
    #- --enable-node-watcher
    #- --list-volumes-interval
    # if you do not want to completely override the defaults use this
    extraArgs: []
    resources:

  # https://kubernetes-csi.github.io/docs/cluster-driver-registrar.html
  # not implemented, likely uncessary at this point
  clusterDriverRegistrar:
    enabled: false

  livenessProbe:
    enabled: true

  # democratic-csi controller
  driver:
    enabled: true
    image: docker.io/democraticcsi/democratic-csi:latest
    # imagePullPolicy: Always
    logLevel: info
    lifecycle:
    #      postStart:
    #        exec:
    #          command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
    #      preStop:
    #        exec:
    #          command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]

    securityContext:
    #      allowPrivilegeEscalation: true
    #      capabilities:
    #        add:
    #        - SYS_ADMIN
    #      privileged: true

    resources:
    extraEnv: []
    extraVolumeMounts: []
  #    - name: foo
  #      mountPath: /foo

  extraVolumes: []
  #  - name: foo
  #    hostPath:
  #      path: /dev
  #      type: Directory

  nodeSelector: {}

  tolerations: []

  topologySpreadConstraints: []

  affinity: {}

node:
  # windows support
  windows:
    enabled: false
  rbac:
    enabled: true
    openshift:
      # set to true if running on openshift
      privileged: false
  enabled: true
  hostNetwork: true
  hostAliases: []
  hostIPC: true
  hostPID: false
  kubeletHostPath: /var/lib/kubelet
  annotations: {}
  labels: {}
  podAnnotations: {}
  podLabels: {}
  priorityClassName: ""

  livenessProbe:
    enabled: true

  cleanup:
    image: docker.io/busybox:1.32.0
    resources:

  # democratic-csi node
  driver:
    enabled: true
    image: docker.io/democraticcsi/democratic-csi:latest
    # imagePullPolicy: Always
    logLevel: info
    # set path to null if your OS has no localtime file
    # RancherOS, openshift, etc
    localtimeHostPath: /etc/localtime
    lifecycle:
    #      postStart:
    #        exec:
    #          command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
    #      preStop:
    #        exec:
    #          command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]

    resources:
    extraEnv: []
    extraVolumeMounts: []
    #    - name: foo
    #      mountPath: /foo

    iscsiDirHostPath: /etc/iscsi
    iscsiDirHostPathType: Directory
  # https://kubernetes-csi.github.io/docs/node-driver-registrar.html
  driverRegistrar:
    enabled: true
    image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.9.0
    args:
      - --v=5
      - --csi-address={{ .csiSocketAddress }}
      - --kubelet-registration-path={{ .Values.node.kubeletHostPath }}/plugins/{{ .Values.csiDriver.name }}/csi.sock
    # if you do not want to completely override the defaults use this
    extraArgs: []
    resources:

  extraVolumes: []
  #  - name: foo
  #    hostPath:
  #      path: /dev
  #      type: Directory

  nodeSelector: {}

  tolerations: []

  affinity: {}

# add note here about volume expansion requirements
storageClasses: []
#- name:
#  annotations: {}
#  labels: {}
#  defaultClass: false
#  reclaimPolicy: Delete
#  volumeBindingMode: Immediate
#  allowVolumeExpansion: true
#  parameters:
#    # for block-based storage can be ext3, ext4, xfs
#    # for nfs should be nfs
#    fsType:
#  mountOptions: []
#  secrets:
#    provisioner-secret:
#    controller-publish-secret:
#    node-stage-secret:
#      # any arbitrary iscsiadm entries can be add by creating keys starting with node-db.<entry.name>
#      # if doing CHAP
#      node-db.node.session.auth.authmethod: CHAP
#      node-db.node.session.auth.username: foo
#      node-db.node.session.auth.password: bar
#
#      # if doing mutual CHAP
#      node-db.node.session.auth.username_in: baz
#      node-db.node.session.auth.password_in: bar
#    node-publish-secret:
#    controller-expand-secret:

volumeSnapshotClasses: []
#- name:
#  annotations: {}
#  labels: {}
#  deletionPolicy: Delete | Retain
#  parameters:
#  secrets:
#    snapshotter-secret:

# this is a temporary measure until all the k8s components are proper
# grpc clients and send valid :authority headers
# required to remove the deprecated/custom `grpc-uds` package with
#`@grpc/grpc-js` and subsequently pave the way for updating `nodejs` to current
# versions
#
# https://github.com/democratic-csi/csi-grpc-proxy
csiProxy:
  enabled: true
  image: docker.io/democraticcsi/csi-grpc-proxy:v0.5.6
  resources:

# Configure a pod security policy to allow privileged pods
enablePSP: false
