{{- if .Values.controller.enabled }}
{{- $root := . -}}

# This YAML file shows how to deploy the snapshot controller

# The snapshot controller implements the control loop for CSI snapshot functionality.
# It should be installed as part of the base Kubernetes distribution in an appropriate
# namespace for components implementing base system functionality. For installing with
# Vanilla Kubernetes, kube-system makes sense for the namespace.

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: snapshot-controller
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: snapshot-controller
    app.kubernetes.io/name: {{ include "snapshot-controller.name" . }}
    helm.sh/chart: {{ include "snapshot-controller.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      app: snapshot-controller
      app.kubernetes.io/name: {{ include "snapshot-controller.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
  # The snapshot controller won't be marked as ready if the v1 CRDs are unavailable.
  # The flag --retry-crd-interval-max is used to determine how long the controller
  # will wait for the CRDs to become available before exiting. The default is 30 seconds
  # so minReadySeconds should be set slightly higher than the flag value.
  minReadySeconds: 35
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: snapshot-controller
        app.kubernetes.io/name: {{ include "snapshot-controller.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      {{- if .Values.controller.rbac.enabled }}
      serviceAccount: snapshot-controller
      {{- end }}
      containers:
        - name: snapshot-controller
          image: {{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag | default (printf "v%s" .Chart.AppVersion) }}
          {{- if .Values.controller.image.pullPolicy }}
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          {{- end }}
          args:
          {{- range .Values.controller.args }}
          - {{ tpl . $root }}
          {{- end }}
          {{- range .Values.controller.extraArgs }}
          - {{ tpl . $root }}
          {{- end }}
{{- end }}
